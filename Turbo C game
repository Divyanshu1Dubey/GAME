/* AUTHOR -- DIVYANSHU DUBEY
   WORK--CANDY GAME */

#include<stdio.h> //STANDARD INPUT OUTPUT HEADER FILE
#include<conio.h> //CONSOLE INPUT OUTPUT HEADER FILE

/* AUTHOR -- DIVYANSHU DUBEY
   WORK--CANDY GAME */

#include<stdio.h> //STANDARD INPUT OUTPUT HEADER FILE
#include<conio.h> //CONSOLE INPUT OUTPUT HEADER FILE
void cargame(){
       int candyX=40,candyY=2,candy1X=20,candy1Y=2,candy2X=65,candy2Y=2;
       int boxX=40,boxY=22,score=0,lifeline=3,d=0;

       char ch;
       textbackground(CYAN);
       start:
       clrscr();
       gotoxy(60,5);
       textcolor(RED);
       cprintf("score=%d",score);
       gotoxy(60,6);
       cprintf("lifeline=%d",lifeline);
       gotoxy(candyX,candyY);
       textcolor(YELLOW);
       cprintf("000");
       gotoxy(candy1X,candy1Y);
       textcolor(YELLOW);
       cprintf("000");
       gotoxy(candy2X,candy2Y);
       textcolor(YELLOW);
       cprintf("000");
       gotoxy(boxX,boxY);
       textcolor(BLACK);
       cprintf("   <*>");
       gotoxy(boxX,boxY+1);
       textcolor(BLACK);
       cprintf("  |***|");
       gotoxy(boxX,boxY+2);
       textcolor(BLACK);
       cprintf(" |*****|");
       gotoxy(boxX,boxY+3);
       textcolor(BLACK);
       cprintf("<*******>");
       if(kbhit()){
	       ch=getch();
	       switch(ch){//ch is value here and getch holds screen after case a,d,j performed
		    case 'a': if(boxX>1){
			      boxX--;
			      }
			      break;
		    case 'A': if(boxX>1){
			      boxX--;
			      }
			      break;
		    case 'd':if(boxX<80){
			     boxX++;
			     }
			     break;
		    case 'D':if(boxX<80){;
			     boxX++;
			     }
			     break;
		    case 'x':exit(0);
		    case 'X':exit(0);
		    }//end of switch
		    }//end of if
		    candyY++;
		    if(candyY==22){
		    d=candyX-boxX;
		    if(d>=1 && d<=8){
		    sound(2000);
		    delay(300);
		    nosound();
		    lifeline--;
		    }else{
		    sound(2000);
		    delay(5);
		    nosound();
		    score++;

			 if(lifeline==0){
			     clrscr();
			     gotoxy(40,13);
			     textcolor(RED);
			     cprintf("GAME IS OVER");
			     sound(1000);
			     delay(500);
			     nosound();
			     getch();
			     exit(0);
		    }  }
		    candyY=2;
		    candyX=rand()%78+1;
		    }

		    candy1Y++;
		    if(candy1Y==22){
		    d=candy1X-boxX;
		    if(d>=1 && d<=8){
		    sound(2000);
		    delay(100);
		    nosound();
		    lifeline--;
		    }else{
		    sound(2000);
		    delay(5);
		    nosound();
		    score++;

			 if(lifeline==0){
			     clrscr();
			     gotoxy(40,13);
			     textcolor(RED);
			     cprintf("GAME IS OVER");
			     sound(1000);
			     delay(500);
			     nosound();
			     getch();
			     exit(0);
		    }  }
		    candy1Y=2;
		    candy1X=rand()%78+1;
		    }

		    candy2Y++;
		    if(candy2Y==22){
		    d=candy2X-boxX;
		    if(d>=1 && d<=8){
		    sound(2000);
		    delay(100);
		    nosound();
		    lifeline--;
		    }else{
		    sound(2000);
		    delay(5);
		    nosound();
		    score++;

			 if(lifeline==0){
			     clrscr();
			     gotoxy(40,13);
			     textcolor(RED);
			     cprintf("GAME IS OVER");
			     sound(1000);
			     delay(5);
			     nosound();
			     getch();
			     exit(0);
		    }  }
		    candy2Y=2;
		    candy2X=rand()%78+1;
		    }
delay(70);
goto start;
}//end of main



candygame2(){
       int candyX=40,candyY=2,boxX=40,boxY=22,candX=30,candY=2,boX=26,boY=22;

       char ch;
       textbackground(BLUE);
       start:
       clrscr();
       gotoxy(candyX,candyY);
       textcolor(YELLOW);
       cprintf("0");
       gotoxy(boxX,boxY);
       cprintf("#");
       gotoxy(boxX+7,boxY);
       cprintf("#");
       gotoxy(boxX,boxY+1);
       cprintf("########");
       gotoxy(candX,candY);
       cprintf("0");
       gotoxy(boX,boY);
       cprintf("#");
       gotoxy(boX+7,boY);
       cprintf("#");
       gotoxy(boX,boY+1);
       cprintf("########");
       if(kbhit()){
	       ch=getch();
	       switch(ch){
		    case 'a':boxX--;
		    break;
		    case 'j':boX--;
			  break;
		    case 'd':boxX++;
		      break;
		    case 'l':boX++;
			 break;
		    case 'x':exit(0);
		    case 'X':exit(0);
		    }
		    }
		    candyY++;
		    if(candyY==22){
		    candyY=2;
		    }
		    delay(200);
		    candY++;
		    if(candY==22){
		    candY=2;
		    }
		    delay(200);
		    goto start;



}


void candygame(){


	int candyX=40,candyY=2,boxX=40,boxY=22,score=0,lifeline=3,d=0;

       char ch;
       textbackground(BLUE);
       start:
       clrscr();
       gotoxy(60,5);
       cprintf("score=%d",score);
       gotoxy(60,6);
       cprintf("lifeline=%d",lifeline);
       gotoxy(candyX,candyY);
       textcolor(YELLOW);
       cprintf("0");
       gotoxy(boxX,boxY);
       cprintf("#");
       gotoxy(boxX+7,boxY);
       cprintf("#");
       gotoxy(boxX,boxY+1);
       cprintf("########");
       if(kbhit()){
	       ch=getch();
	       switch(ch){//ch is value here and getch holds screen after case a,d,j performed
		    case 'a': if(boxX>1){
		    boxX--;
		    }
		    break;
		    case 'd':if(boxX>1){
		    boxX++;
		    }

		      break;
		    case 'D':boxX++;
			   break;
		    case 'x':exit(0);
		    case 'X':exit(0);
		    }//end of switch
		    }//end of if
		    candyY++;
		    if(candyY==22){
		    d=candyX-boxX;
		    if(d>=1 && d<=6){
		      score++;
		    }else{
			 lifeline--;
			 if(lifeline==0){
			     clrscr();
			     gotoxy(40,13);
			     textcolor(RED);
			     cprintf("GAME IS OVER");
			     sound(1000);
			     delay(100);
			     nosound();
			     getch();
			     exit(0);
		    }


		    }
		    candyY=2;
		     candyX=rand()%80+1;
}
delay(200);
goto start;

 }		 /* AUTHOR - DIVYANSHU DUBEY
		      DATE - 21/06/2023
		      WORK - GAME DEVELOPMENT */
void sps(){
int choice,self=0,computer=0,i,rounds,num;
    clrscr();
      printf("\nenter 1 for stone ");
      printf("\nenter 2 for paper ");
      printf("\nenter 3 for scissor ");
      printf("\nenter no. of rounds to play ");
      scanf("%d",&rounds);
      for(i=1;i<=rounds;i++)
      {
      textbackground(GREEN);
	printf("\nenter your choice= ");
	scanf("%d",&choice);
	 num=(rand()%3)+1;
	 if(choice==num)
	 {
	 textcolor(CYAN);
	 cprintf("\nboth choose same try again");
	 sound(2000);
	 delay(800);
	 nosound();
	 }
	 else if(choice==1 && num==2)
	 {
	  printf("\n you choose rock and computer choose paper");
	  textcolor(RED);
	  cprintf("\ncomputer won");
	  computer++;
	  sound(4000);
	  delay(300);
	  nosound();
	  }
	  else if(choice==1 && num==3)
	 {
	  printf("\n you choose rock and computer choose scisor");
	  textcolor(YELLOW);
	  cprintf("\nyou won");
	  self++;
	  sound(1000);
	  delay(100);
	  nosound();
	  }
	  else if(choice==2 && num==1)
	 {
	  printf("\n you choose rock and computer choose paper");
	  textcolor(CYAN);
	  cprintf("\nyou won");
	  self++;
	  sound(1000);
	  delay(100);
	  nosound();
	  }
	  else if(choice==2 && num==3)
	 {
	  printf("\n you choose paper and computer choose scisor");
	  textcolor(RED);
	  cprintf("\ncomputer won");
	  computer++;
	  sound(4000);
	  delay(300);
	  nosound();
	  }
	  else if(choice==3 && num==1)
	 {
	  printf("\n you choose scisor and computer choose stone");
	  textcolor(RED);
	  cprintf("\ncomputer won");
	  computer++;
	  sound(4000);
	  delay(300);
	  nosound();
	  }
	  else if(choice==3 && num==2)
	 {
	  printf("\n you choose scisor and computer choose paper");
	  textcolor(CYAN);
	  cprintf("\nyou won");
	  self++;
	  sound(1000);
	  delay(100);
	  nosound();
	  }
	  }
	  printf("\n your score is %d",self);
	  printf("\ncomputer score is %d",computer);
	  if(self==computer)
	  {
	  printf("\n it is tie");
	  }
	  else if(self>computer)
	  {
	  printf("\n you are the winner of your game");
	  }
	  else
	  {
	  clrscr();
	  gotoxy(27,15);
	  textcolor(WHITE);
	  cprintf("\ncomputer is winner of this game");
	  }

      getch();


}


#include<stdio.h>
#include<conio.h>

char board[3][3] = { { '1','2','3' },{ '4','5','6' },{ '7','8','9' } };
int currentPlayer = 1; // Player 1 starts the game
int moves = 0;
	displayBoard()
	{           clrscr();
    printf("\n");
    printf(" %c | %c | %c\n", board[0][0], board[0][1], board[0][2]);
    printf("-----------\n");
    printf(" %c | %c | %c\n", board[1][0], board[1][1], board[1][2]);
    printf("-----------\n");
    printf(" %c | %c | %c\n", board[2][0], board[2][1], board[2][2]);
	 }
int checkWin() {
int i;
    // Check rows, columns, and diagonals for a winning condition
    for(i=0;i<3;i++) {
	if (board[i][0] == board[i][1] && board[i][1] == board[i][2]){
	sound(500);
	delay(100);
	nosound();
	printf("GAME OVER");
	    return 1;           }
	if (board[0][i] == board[1][i] && board[1][i] == board[2][i])      {
	sound(500);
	delay(100);
	nosound();
	printf("GAME OVER");

	    return 1;          }
    }
    if (board[0][0] == board[1][1] && board[1][1] == board[2][2])
      {
	sound(500);
	delay(100);
	nosound();
	printf("GAME OVER");
	return 1;    }
    if (board[0][2] == board[1][1] && board[1][1] == board[2][0])
      {
	sound(500);
	delay(100);
	nosound();
	printf("GAME OVER");
	return 1;   }

    return 0;
}

void startGame() {
    int choice, row, col;

    do {
	displayBoard();
	currentPlayer = (currentPlayer % 2) ? 1 : 2;

	printf("Player %d, enter the number of the square where you want to place your %c: ", currentPlayer, (currentPlayer == 1) ? 'X' : 'O');
	scanf("%d", &choice);

	row = --choice / 3;
	col = choice % 3;

	if (choice >= 0 && choice < 9 && board[row][col] != 'X' && board[row][col] != 'O') {
	    board[row][col] = (currentPlayer == 1) ? 'X' : 'O';
	    currentPlayer++;
	    moves++;
	} else {
	    printf("Invalid move! Please try again.\n");
	}
    } while (!checkWin() && moves < 9);

    displayBoard();
    if (checkWin()) {
	printf("Player %d wins!\n", --currentPlayer);
    } else {
	printf("It's a draw!\n");
    }
}

int tiktaktok() {
    clrscr();

    printf("Welcome to Tic Tac Toe\n");
    printf("Player 1: X | Player 2: O\n");
    startGame();
    return 0;
}
	     int toe(){
	     printf("game not available");
	     tiktaktok();}





void main()
{
   int m;
   clrscr();
   printf("what do you want to play\n");
   printf("press 1: CANDY GAME\n");
   printf("press 2: STONE PAPER SCISSOR\n");
   printf("press 3: TIK TAK TOC\n");
   printf("press 4: CAR GAME\n");
   printf("press 5: TO EXIT\n");
   scanf("%d",&m);
   if (m==1)
   {int v;
printf("press 1 : candy game solo\n");
printf("press 2 : candy game multiplayer\n");
printf("press 3 : TO RETURN MAIN MENU");
scanf("%d",&v);
if(v==1){

   candygame();}
else if (v==2){
candygame2();  }
else{
exit(0);
}
}
   else if(m==2) {
    sps(); }
   else if(m==3) {
   toe();}
else if(m==4){
cargame();}
   else{
	exit(0);
   }
}

